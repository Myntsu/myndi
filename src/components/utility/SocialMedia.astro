---
// libraries import
import { Icon } from "astro-icon";

import type { HTMLAttributes } from "astro/types";

interface Socials {
  platform?: string;
  link?: string;
  handle?: string;
}

interface Props extends HTMLAttributes<"aside"> {
  socials?: Socials[];
}

const { socials, class: backgroundColor } = Astro.props;
---

<aside class=`social-media ${backgroundColor}`>
  <div>
    {
      socials?.map(({ platform, link, handle }) => (
        <a 
          href={link}
          target="_blank">
          <Icon pack="fa-brands" name={`${platform}-square`} width="32" height="32"/>
          <span data-handle>{handle}</span>
        </a>
      ))
    }
  </div>
</aside>

<style lang="scss">
  .social-media {
    position: sticky;
    inset: 0;

    &.filled {
      background-color: hsl(var(--background-lighter));
    }

    > div {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(min(50px, 100%), 1fr));
      gap: .25rem;

      cursor: pointer;

      padding-inline: .5rem;
      padding-block: var(--footer-distance);
      
      a {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
  
        color: hsl(var(--font));
        font-size: 2rem;
        text-decoration: none;

        span {
            display: -webkit-box;
            -webkit-line-clamp: 1;
            -webkit-box-orient: vertical;
            overflow: hidden;
            word-break: break-all;
            font-size: .6rem;
        }

        &:is(:hover, :focus-visible) > * {
            color: hsl(var(--button));
            rotate: 10deg;
            
            transition: color 150ms linear;
        }
      }
    }

  }
</style>

<script>
  const handles = document.querySelectorAll('[data-handle]');
  handles.forEach((handle) => {
    const handleText = handle.innerText;
    handle.setAttribute('title', handleText);
  });
</script>