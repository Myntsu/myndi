---
// util imports
import { formatBlogPosts, slugify } from "../scripts/utils";

const allPosts = await Astro.glob("../pages/blog/*.md");
const formattedPosts = formatBlogPosts(allPosts);

const allCategories = formattedPosts
  // you can add .toLowerCase() in case you want to keep it all lowercase
  .map((cat) => cat.frontmatter.category)
  .flat();

const processedCats = allCategories.reduce((acc, category) => {
  // check if the category exists in the acc
  const value = acc[category] || 0;

  return {
    ...acc,
    [category]: value + 1,
  };
}, {});

const { showCount, classes, categoryClasses } = Astro.props;
---

<ul class:list={[categoryClasses]}>
  {
    Object.entries(processedCats).map(([key, val]) => (
      <li>
        <div class:list={[classes]}>
          <a
            href={`/category/${slugify(key)}/`}>
            <div>
              <span class="title">{key}</span> {showCount && <span class="number">{showCount && `${val}`}</span>}
            </div>
          </a>
        </div>
      </li>
    ))
  }
</ul>

<style lang="scss">
  ul {
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    gap: var(--rem-sm);

    margin: 0;
    padding: 0;
  }

  .grid-list {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));

      a {
        width: 100%;
        
        div {
          span {
            &.grid-row-2 {
              grid-row: 2;
            }
          }
        }
      }
  }
</style>

<script>
const spanElements = document.querySelectorAll('.grid-list span');

spanElements.forEach((span) => {
  if (span.scrollWidth > span.clientWidth) {
    // Text overflows
    span.classList.add('grid-row-2'); // Add a class to apply the grid-row: 2 property
    // Alternatively, you can directly set the style property:
    // span.style.gridRow = '2';
  }
});
</script>