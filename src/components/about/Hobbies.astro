---
// astro imports
import { Image } from 'astro:assets'
import { Icon } from "astro-icon";

import type { HTMLAttributes } from "astro/types";

interface Hobbies {
  title?: string;
  description?: string;
  img?: string;
  alt?: string;
  position?: string;
}

interface Props extends HTMLAttributes<"li"> {
  hobbies?: Hobbies[];
}

const { hobbies } = Astro.props;
---

<div
  class="carousel"
  data-carousel>
  <div class="button">
    <button
      type="button"
      class="carousel-button prev"
      data-carousel-button
      aria-label="Previous image">
      <Icon name="mdi:arrow-left-bold" />
    </button>
  </div>
  <div class="button">
    <button
      type="button"
      class="carousel-button next"
      data-carousel-button
      aria-label="Next image">
      <Icon name="mdi:arrow-right-bold" />
    </button>
  </div>
  <ul data-slides>
    {
      hobbies?.map(({ title, description, img, alt, position }, index) => (
        <li
          class="slide"
          data-active={index === 0 ? true : undefined}>
          <div class="title-and-description">
              <h3 class="title">{title}</h3>
              <p class="description">{description}</p>
          </div>
          <Image
            src={`${img}`}
            alt={`${alt}`}
            width={800}
            height={800}
            format="webp"
            quality={100}
            class="slide-img"
          />
        </li>
      ))
    }
  </ul>
</div>

<style lang="scss">
  .carousel {
    height: 800px;
    position: relative;

    @media (max-width: 970px) {
      height: 400px;
    }

    .carousel-button {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);

      display: flex;
      padding: 0.5em;

      border: none;

      z-index: 2;

      &.prev {
        left: 0.5rem;
      }

      &.next {
        right: 0.5rem;
      }

      svg {
        width: 28px;
        aspect-ratio: 1;
      }
    }

    ul {
      margin: 0;
      padding: 0;
      list-style: none;
    }

    .slide {
      position: absolute;
      inset: 0;
      opacity: 0;
      transition: 200ms opacity ease-in-out;

      &[data-active] {
        opacity: 1;
        z-index: 1;
      }

      .title-and-description {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;

        display: flex;
        flex-direction: column;
        gap: 1rem;
        padding: 1rem;

        color: hsl(0 0% 91%);
        background-color: hsl(0 0% 8% / .5);

        z-index: 3;

        & > * {
            margin: 0;
        }

        h3 {
            font-size: 1.5rem;
        }

        p {
            opacity: .9;
        }
      }

      img {
        display: block;
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 0.5rem;
      }
    }
  }
</style>

<script lang="js">
const buttons = document.querySelectorAll("[data-carousel-button]");

buttons.forEach((button) => {
    button.addEventListener("click", () => {
        const offset = button.dataset.carouselbutton === "next" ? 1 : -1;
        const slides = button
            .closest("[data-carousel]")
            .querySelector("[data-slides]");

        const activeSlide = slides.querySelector("[data-active]");
        let newIndex = [...slides.children].indexOf(activeSlide) + offset;
        if (newIndex < 0) newIndex = slides.children.length - 1;
        if (newIndex >= slides.children.length) newIndex = 0;

        slides.children[newIndex].dataset.active = true;
        delete activeSlide.dataset.active;
    });
});
</script>
